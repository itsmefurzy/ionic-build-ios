name: Ionic Build

on: [push]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1

      - name: Use coturiv/setup-ionic
        uses: coturiv/setup-ionic@v1
        with:
          cordova-version: 8
              
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache plugins
        uses: actions/cache@v2
        env:
          cache-name: cache-plugins
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: plugins/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache platforms
        uses: actions/cache@v2
        env:
          cache-name: cache-platforms
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: platforms/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Cache gradle
        uses: actions/cache@v2
        env:
          cache-name: cache-gradle
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.gradle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: |
          npm install node-sass@latest
          npm i -D -E cordova-res
      - name: Build Release
        run: |
          ionic cordova prepare
          ionic cordova resources
          ionic cordova platform add ios
          ionic cordova prepare ios
          ionic cordova build ios --release --verbose
      - uses: actions/upload-artifact@v1
        with:
          name: apk-artifact
          path: ./platforms/android/app/build/outputs/apk/
